rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the current user is an admin
    // This uses multiple safety checks - first checks if admin field exists directly
    // and falls back to role-based check
    function isAdmin() {
      return request.auth != null && (
        // First try to check for direct admin field
        (exists(/databases/$(database)/documents/users/$(request.auth.uid))) &&
        (
          // Try direct admin flag if exists
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
          // Fallback to role check
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        )
      );
    }
    
    // Allow all user reads from admin users - critical for admin dashboard
    match /users/{anyUserId} {
      allow read: if isAdmin();
    }
    
    // Products can be read by anyone but written only by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User data is accessible to the user it belongs to or to admins
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // Allow a user to create their own document after sign-up
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Orders can be created by authenticated users
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
    }
    
    // Carts can be managed by their owners
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
} 