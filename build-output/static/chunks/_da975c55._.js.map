{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/components/FirebaseImage.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Image, { ImageProps } from 'next/image';\nimport { generateFallbackImage, getSafeImageUrl } from '../lib/cloudinaryUtils';\n\ninterface CloudImageProps extends Omit<ImageProps, 'src'> {\n  src: string;\n  fallbackText?: string;\n}\n\n/**\n * A component specifically designed to handle Firebase Storage images with proper CORS error handling\n * Uses a server-side proxy to avoid CORS issues with Firebase Storage\n */\nexport default function CloudImage({\n  src,\n  alt,\n  width = 300,\n  height = 300,\n  fallbackText,\n  priority = false,\n  loading,\n  ...props\n}: CloudImageProps) {\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [safeSrc, setSafeSrc] = useState<string | null>(null);\n\n  // Update safeSrc when src changes\n  useEffect(() => {\n    if (!src || (typeof src === 'string' && src.trim() === '')) {\n      // Use a fallback image for empty src\n      setSafeSrc(generateFallbackImage(fallbackText || alt?.toString() || 'Image'));\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      if (typeof src === 'string') {\n        // Get a safe URL for any type of image source\n        setSafeSrc(getSafeImageUrl(src));\n      } else {\n        // Handle non-string sources (like StaticImageData)\n        setSafeSrc(src);\n      }\n    } catch (error) {\n      console.error('Error setting image source:', error);\n      setSafeSrc(generateFallbackImage(fallbackText || alt?.toString() || 'Image'));\n    }\n\n    // Reset error and loading states\n    setError(false);\n    setIsLoading(true);\n  }, [src, alt, fallbackText]);\n\n  const handleLoad = () => {\n    setIsLoading(false);\n  };\n\n  const handleError = () => {\n    console.warn(`Image failed to load: ${safeSrc}`);\n    setError(true);\n    setIsLoading(false);\n    \n    // Set fallback\n    setSafeSrc(generateFallbackImage(fallbackText || alt?.toString() || 'Image'));\n  };\n\n  // Don't render anything if we don't have a valid src\n  if (!safeSrc) {\n    return (\n      <div \n        className=\"relative overflow-hidden bg-gray-100 flex items-center justify-center\"\n        style={{ width, height }}\n      >\n        <div className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative overflow-hidden\" style={{ background: '#f3f4f6' }}>\n      {isLoading && (\n        <div \n          className=\"absolute inset-0 flex items-center justify-center bg-gray-100\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full animate-spin\"></div>\n        </div>\n      )}\n      \n      <Image\n        src={safeSrc}\n        alt={alt || \"Image\"}\n        width={width}\n        height={height}\n        onLoad={handleLoad}\n        onError={handleError}\n        priority={priority}\n        loading={!priority ? loading : undefined}\n        className={`${props.className || ''} ${isLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`}\n        {...props}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAee,SAAS,WAAW,EACjC,GAAG,EACH,GAAG,EACH,QAAQ,GAAG,EACX,SAAS,GAAG,EACZ,YAAY,EACZ,WAAW,KAAK,EAChB,OAAO,EACP,GAAG,OACa;;IAChB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,kCAAkC;IAClC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,CAAC,OAAQ,OAAO,QAAQ,YAAY,IAAI,IAAI,OAAO,IAAK;gBAC1D,qCAAqC;gBACrC,WAAW,CAAA,GAAA,yHAAA,CAAA,wBAAqB,AAAD,EAAE,gBAAgB,KAAK,cAAc;gBACpE,aAAa;gBACb;YACF;YAEA,IAAI;gBACF,IAAI,OAAO,QAAQ,UAAU;oBAC3B,8CAA8C;oBAC9C,WAAW,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE;gBAC7B,OAAO;oBACL,mDAAmD;oBACnD,WAAW;gBACb;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;gBAC7C,WAAW,CAAA,GAAA,yHAAA,CAAA,wBAAqB,AAAD,EAAE,gBAAgB,KAAK,cAAc;YACtE;YAEA,iCAAiC;YACjC,SAAS;YACT,aAAa;QACf;+BAAG;QAAC;QAAK;QAAK;KAAa;IAE3B,MAAM,aAAa;QACjB,aAAa;IACf;IAEA,MAAM,cAAc;QAClB,QAAQ,IAAI,CAAC,CAAC,sBAAsB,EAAE,SAAS;QAC/C,SAAS;QACT,aAAa;QAEb,eAAe;QACf,WAAW,CAAA,GAAA,yHAAA,CAAA,wBAAqB,AAAD,EAAE,gBAAgB,KAAK,cAAc;IACtE;IAEA,qDAAqD;IACrD,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE;gBAAO;YAAO;sBAEvB,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBACE,6LAAC;QAAI,WAAU;QAA2B,OAAO;YAAE,YAAY;QAAU;;YACtE,2BACC,6LAAC;gBACC,WAAU;gBACV,eAAY;0BAEZ,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAInB,6LAAC,gIAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK,OAAO;gBACZ,OAAO;gBACP,QAAQ;gBACR,QAAQ;gBACR,SAAS;gBACT,UAAU;gBACV,SAAS,CAAC,WAAW,UAAU;gBAC/B,WAAW,GAAG,MAAM,SAAS,IAAI,GAAG,CAAC,EAAE,YAAY,cAAc,cAAc,gCAAgC,CAAC;gBAC/G,GAAG,KAAK;;;;;;;;;;;;AAIjB;GA3FwB;KAAA","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/app/%28admin%29/dashboard/products/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, use } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '../../../../../lib/authContext';\nimport { \n  getProductById, \n  updateProduct, \n  deleteProduct, \n  uploadProductImage\n} from '../../../../../lib/firebaseUtils';\nimport Link from 'next/link';\nimport FirebaseImage from '../../../../../components/FirebaseImage';\nimport { toast } from 'react-hot-toast';\nimport { getSafeImageUrl } from '../../../../../lib/cloudinaryUtils';\n\n// Categories for dropdown\nconst categories = [\n  'electronics',\n  'clothing',\n  'accessories',\n  'home',\n  'books',\n  'sports',\n  'beauty',\n  'toys',\n  'kitchen',\n];\n\nexport default function EditProductPage({ params }: { params: { id: string } }) {\n  // Unwrap the params Promise using React.use()\n  const unwrappedParams = use(params);\n  const productId = unwrappedParams.id;\n  \n  const router = useRouter();\n  const { user, isAdmin } = useAuth();\n  \n  // Product state\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState('');\n  const [features, setFeatures] = useState<string[]>([]);\n  const [images, setImages] = useState<string[]>([]);\n  \n  // UI state\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [imageUploading, setImageUploading] = useState(false);\n  const [newImages, setNewImages] = useState<File[]>([]);\n  const [imagePreviews, setImagePreviews] = useState<string[]>([]);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check auth\n  useEffect(() => {\n    if (user && !isLoading) {\n      setLoading(false);\n    }\n  }, [user, isLoading]);\n\n  // Fetch product\n  useEffect(() => {\n    const fetchProduct = async () => {\n      setIsLoading(true);\n      try {\n        const product = await getProductById(productId);\n        if (product) {\n          setName(product.name);\n          setDescription(product.description);\n          setPrice(product.price.toString());\n          setCategory(product.category);\n          setStock(product.stock.toString());\n          setFeatures(product.features || []);\n          \n          // Use the original image URLs since we're no longer using Firebase Storage\n          setImages(product.images || []);\n        } else {\n          toast.error('Product not found');\n          router.push('/dashboard/products');\n        }\n      } catch (error) {\n        console.error('Error fetching product:', error);\n        toast.error('Failed to load product details');\n        router.push('/dashboard/products');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (productId) {\n      fetchProduct();\n    }\n  }, [productId, router]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    switch (name) {\n      case 'name': setName(value); break;\n      case 'description': setDescription(value); break;\n      case 'price': setPrice(value); break;\n      case 'category': setCategory(value); break;\n      case 'stock': setStock(value); break;\n    }\n    \n    // Clear error\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: '' });\n    }\n  };\n\n  const handleFeatureChange = (index: number, value: string) => {\n    const newFeatures = [...features];\n    newFeatures[index] = value;\n    setFeatures(newFeatures);\n  };\n\n  const addFeatureField = () => {\n    setFeatures([...features, '']);\n  };\n\n  const removeFeatureField = (index: number) => {\n    setFeatures(features.filter((_, i) => i !== index));\n  };\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files) return;\n    \n    const fileArray = Array.from(files);\n    setNewImages([...newImages, ...fileArray]);\n    \n    // Create and store image previews\n    const newPreviews = fileArray.map(file => URL.createObjectURL(file));\n    setImagePreviews([...imagePreviews, ...newPreviews]);\n  };\n\n  const removeImage = (index: number) => {\n    // Remove preview and revoke object URL\n    URL.revokeObjectURL(imagePreviews[index]);\n    \n    // Remove from arrays\n    const newPreviews = [...imagePreviews];\n    const newImageFiles = [...newImages];\n    newPreviews.splice(index, 1);\n    newImageFiles.splice(index, 1);\n    \n    setImagePreviews(newPreviews);\n    setNewImages(newImageFiles);\n  };\n\n  const removeExistingImage = (index: number) => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n    \n    if (!name.trim()) {\n      newErrors.name = 'Product name is required';\n    }\n    \n    if (!description.trim()) {\n      newErrors.description = 'Description is required';\n    }\n    \n    if (!price) {\n      newErrors.price = 'Price is required';\n    } else if (isNaN(parseFloat(price)) || parseFloat(price) <= 0) {\n      newErrors.price = 'Price must be a positive number';\n    }\n    \n    if (!category) {\n      newErrors.category = 'Category is required';\n    }\n    \n    if (!stock) {\n      newErrors.stock = 'Stock quantity is required';\n    } else if (isNaN(parseInt(stock)) || parseInt(stock) < 0) {\n      newErrors.stock = 'Stock must be a non-negative number';\n    }\n    \n    if (images.length === 0 && newImages.length === 0) {\n      newErrors.images = 'At least one product image is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      toast.error('Please fix form errors');\n      return;\n    }\n    \n    setIsSaving(true);\n    \n    try {\n      // First upload any new images\n      let allImages = [...images];\n      \n      if (newImages.length > 0) {\n        setImageUploading(true);\n        \n        // Upload each image sequentially and gather URLs\n        for (const imageFile of newImages) {\n          try {\n            // Upload the image to Cloudinary \n            const imageUrl = await uploadProductImage(imageFile);\n            \n            // Add the image URL to our array\n            allImages.push(imageUrl);\n            toast.success(`Uploaded image: ${imageFile.name}`);\n          } catch (uploadError) {\n            console.error('Failed to upload an image:', uploadError);\n            toast.error(`Failed to upload image: ${imageFile.name}`);\n          }\n        }\n        \n        setImageUploading(false);\n      }\n      \n      // Update product with all data including new image URLs\n      const productData = {\n        name,\n        description,\n        price: parseFloat(price),\n        category,\n        stock: parseInt(stock),\n        features: features.filter(f => f.trim() !== ''), // Remove empty features\n        images: allImages,\n        updatedAt: new Date().toISOString(),\n      };\n      \n      await updateProduct(productId, productData);\n      \n      toast.success('Product updated successfully');\n      \n      // Clear new images and previews\n      imagePreviews.forEach(preview => URL.revokeObjectURL(preview));\n      setNewImages([]);\n      setImagePreviews([]);\n      \n      // Redirect back to dashboard\n      router.push('/dashboard/products');\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Failed to update product');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!productId) return;\n    \n    setIsDeleting(true);\n    \n    try {\n      await deleteProduct(productId);\n      toast.success('Product deleted successfully');\n      router.push('/dashboard/products');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      toast.error('Failed to delete product');\n    } finally {\n      setIsDeleting(false);\n      setShowDeleteConfirm(false);\n    }\n  };\n\n  if (loading || !user || !isAdmin) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\n          <div className=\"h-64 bg-gray-200 rounded mb-6\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\n          <div className=\"h-64 bg-gray-200 rounded mb-6\"></div>\n          <div className=\"h-40 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Edit Product</h1>\n        <div className=\"flex space-x-4\">\n          <Link\n            href=\"/dashboard\"\n            className=\"bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-md\"\n          >\n            Cancel\n          </Link>\n          <button\n            onClick={() => setShowDeleteConfirm(true)}\n            className=\"bg-red-100 hover:bg-red-200 text-red-700 py-2 px-4 rounded-md\"\n            disabled={isDeleting}\n          >\n            {isDeleting ? 'Deleting...' : 'Delete Product'}\n          </button>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"bg-white shadow rounded-lg overflow-hidden mb-8\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Basic Information</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"md:col-span-2\">\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-800 mb-1\">\n                  Product Name\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={handleInputChange}\n                  className={`w-full border ${errors.name ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n                />\n                {errors.name && <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-800 mb-1\">\n                  Description\n                </label>\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={handleInputChange}\n                  rows={4}\n                  className={`w-full border ${errors.description ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n                />\n                {errors.description && <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>}\n              </div>\n              \n              <div>\n                <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-800 mb-1\">\n                  Price ($)\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"price\"\n                  name=\"price\"\n                  value={price}\n                  onChange={handleInputChange}\n                  className={`w-full border ${errors.price ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n                />\n                {errors.price && <p className=\"mt-1 text-sm text-red-600\">{errors.price}</p>}\n              </div>\n              \n              <div>\n                <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-800 mb-1\">\n                  Category\n                </label>\n                <select\n                  id=\"category\"\n                  name=\"category\"\n                  value={category}\n                  onChange={handleInputChange}\n                  className={`w-full border ${errors.category ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map((cat) => (\n                    <option key={cat} value={cat}>\n                      {cat.charAt(0).toUpperCase() + cat.slice(1)}\n                    </option>\n                  ))}\n                </select>\n                {errors.category && <p className=\"mt-1 text-sm text-red-600\">{errors.category}</p>}\n              </div>\n              \n              <div>\n                <label htmlFor=\"stock\" className=\"block text-sm font-medium text-gray-800 mb-1\">\n                  Stock\n                </label>\n                <input\n                  type=\"number\"\n                  id=\"stock\"\n                  name=\"stock\"\n                  min=\"0\"\n                  value={stock}\n                  onChange={handleInputChange}\n                  className={`w-full border ${errors.stock ? 'border-red-500' : 'border-gray-300'} rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n                />\n                {errors.stock && <p className=\"mt-1 text-sm text-red-600\">{errors.stock}</p>}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-medium text-gray-900\">Features</h2>\n              <button\n                type=\"button\"\n                onClick={addFeatureField}\n                className=\"text-sm text-indigo-600 hover:text-indigo-800\"\n              >\n                + Add Feature\n              </button>\n            </div>\n            \n            {features.map((feature, index) => (\n              <div key={index} className=\"flex mb-3\">\n                <input\n                  type=\"text\"\n                  value={feature}\n                  onChange={(e) => handleFeatureChange(index, e.target.value)}\n                  placeholder={`Feature ${index + 1}`}\n                  className=\"flex-grow border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => removeFeatureField(index)}\n                  className=\"ml-2 text-red-600 hover:text-red-800\"\n                >\n                  <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                </button>\n              </div>\n            ))}\n            \n            {features.length === 0 && (\n              <p className=\"text-sm text-gray-500\">No features added yet. Click \"Add Feature\" to add product features.</p>\n            )}\n          </div>\n          \n          <div className=\"p-6\">\n            <div className=\"mb-4\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-2\">Images</h2>\n              <p className=\"text-sm text-gray-500\">Add product images (up to 5). First image will be used as the main product image.</p>\n              {errors.images && <p className=\"mt-1 text-sm text-red-600\">{errors.images}</p>}\n            </div>\n            \n            {/* Existing product images */}\n            {images.length > 0 && (\n              <div className=\"mb-6\">\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Current Images</h3>\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n                  {images.map((imageUrl, index) => (\n                    <div key={index} className=\"relative group\">\n                      <div className=\"aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200\">\n                        <FirebaseImage\n                          src={imageUrl}\n                          alt={`Product image ${index + 1}`}\n                          width={200}\n                          height={200}\n                          className=\"object-cover object-center w-full h-full\"\n                          fallbackText={`Product ${index + 1}`}\n                        />\n                      </div>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeExistingImage(index)}\n                        className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 shadow-md opacity-0 group-hover:opacity-100 transition-opacity\"\n                      >\n                        <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            {/* New image uploads */}\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Add New Images</h3>\n              <div className=\"flex items-center mb-4\">\n                <label className=\"block\">\n                  <span className=\"sr-only\">Choose images</span>\n                  <input \n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImageChange}\n                    className=\"block w-full text-sm text-gray-500\n                      file:mr-4 file:py-2 file:px-4\n                      file:rounded-md file:border-0\n                      file:text-sm file:font-semibold\n                      file:bg-indigo-50 file:text-indigo-700\n                      hover:file:bg-indigo-100\n                    \"\n                  />\n                </label>\n              </div>\n              \n              {imagePreviews.length > 0 && (\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n                  {imagePreviews.map((preview, index) => (\n                    <div key={`new-${index}`} className=\"relative group\">\n                      <div className=\"aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-md bg-gray-200\">\n                        <img\n                          src={preview}\n                          alt={`New upload preview ${index + 1}`}\n                          className=\"object-cover object-center w-full h-full\"\n                        />\n                      </div>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeImage(index)}\n                        className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 shadow-md opacity-0 group-hover:opacity-100 transition-opacity\"\n                      >\n                        <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-end space-x-4\">\n          <Link\n            href=\"/dashboard\"\n            className=\"bg-white border border-gray-300 text-gray-700 py-2 px-4 rounded-md shadow-sm hover:bg-gray-50\"\n          >\n            Cancel\n          </Link>\n          <button\n            type=\"submit\"\n            disabled={isSaving || imageUploading}\n            className=\"bg-indigo-600 text-white py-2 px-4 rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400\"\n          >\n            {isSaving ? 'Saving...' : imageUploading ? 'Uploading Images...' : 'Save Changes'}\n          </button>\n        </div>\n      </form>\n      \n      {/* Delete confirmation modal */}\n      {showDeleteConfirm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 flex items-center justify-center\">\n          <div className=\"relative p-5 bg-white w-full max-w-md m-4 rounded-lg shadow-xl\">\n            <h3 className=\"text-xl font-medium text-gray-900 mb-4\">Delete Product</h3>\n            <p className=\"text-gray-500 mb-6\">\n              Are you sure you want to delete this product? This action cannot be undone.\n            </p>\n            <div className=\"flex justify-end space-x-4\">\n              <button\n                onClick={() => setShowDeleteConfirm(false)}\n                className=\"bg-white border border-gray-300 text-gray-700 py-2 px-4 rounded-md shadow-sm hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleDelete}\n                disabled={isDeleting}\n                className=\"bg-red-600 text-white py-2 px-4 rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:bg-red-400\"\n              >\n                {isDeleting ? 'Deleting...' : 'Delete Product'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}