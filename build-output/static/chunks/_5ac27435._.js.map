{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/components/ImprovedImage.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Image, { ImageProps } from 'next/image';\n\n// This component adds robust error handling to the Next.js Image component\nexport default function ImprovedImage({\n  src,\n  alt,\n  width = 300,\n  height = 300,\n  priority = false,\n  loading,\n  ...props\n}: ImageProps) {\n  const [error, setError] = useState(false);\n  const [nextJsImageFailed, setNextJsImageFailed] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Reset error state if src changes\n  useEffect(() => {\n    setError(false);\n    setNextJsImageFailed(false);\n    setIsLoading(true);\n  }, [src]);\n  \n  // Generate a small, simple placeholder\n  const simplePlaceholder = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${width} ${height}' fill='%23e5e7eb'%3E%3Crect width='${width}' height='${height}' /%3E%3C/svg%3E`;\n  \n  // Handle load event\n  const handleLoad = () => {\n    setIsLoading(false);\n  };\n  \n  // Handle initial Next.js Image error\n  const handleNextJsError = () => {\n    console.warn(`Next.js Image failed to load: ${src}`);\n    setNextJsImageFailed(true);\n    setIsLoading(false);\n  };\n  \n  // Handle fallback image error\n  const handleFallbackError = () => {\n    console.warn(`Fallback image also failed: ${src}`);\n    setError(true);\n  };\n\n  // Create image props, ensuring we don't pass both priority and loading\n  const imageProps: any = {\n    src: src,\n    alt: alt || \"Product image\",\n    width: width,\n    height: height,\n    onError: handleNextJsError,\n    onLoad: handleLoad,\n    quality: 60, // Lower quality to reduce chances of timeout\n    ...props,\n    className: `${props.className || ''} ${isLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-300`,\n  };\n\n  // Set priority or loading property but not both\n  if (priority) {\n    imageProps.priority = true;\n    // Don't set loading when priority is true\n  } else if (loading) {\n    imageProps.loading = loading;\n  } else {\n    imageProps.loading = 'lazy';\n  }\n\n  // If next.js image failed, use regular img tag as fallback\n  if (nextJsImageFailed) {\n    return (\n      <div className=\"relative overflow-hidden\" style={{ background: '#f3f4f6' }}>\n        {!error ? (\n          <img\n            src={typeof src === 'string' ? src : ''}\n            alt={alt || \"Product image\"}\n            width={width}\n            height={height}\n            onError={handleFallbackError}\n            loading={priority ? \"eager\" : \"lazy\"}\n            className={`${props.className || ''} w-full h-full object-cover`}\n          />\n        ) : (\n          // Show a placeholder if both Next.js Image and regular img fail\n          <div className=\"flex items-center justify-center bg-gray-100 w-full h-full\">\n            <svg className=\"w-12 h-12 text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.2.26-.05.64.27.64h8.98c.32 0 .48-.39.28-.66l-2.54-3.14c-.2-.25-.58-.25-.78 0z\" />\n            </svg>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Try the Next.js Image component first\n  return (\n    <div className=\"relative overflow-hidden\" style={{ background: '#f3f4f6' }}>\n      {isLoading && (\n        <div \n          className=\"absolute inset-0 flex items-center justify-center bg-gray-100\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"w-8 h-8 border-2 border-gray-200 border-t-gray-400 rounded-full animate-spin\"></div>\n        </div>\n      )}\n      <Image {...imageProps} />\n    </div>\n  );\n} \n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMe,SAAS,cAAc,EACpC,GAAG,EACH,GAAG,EACH,QAAQ,GAAG,EACX,SAAS,GAAG,EACZ,WAAW,KAAK,EAChB,OAAO,EACP,GAAG,OACQ;;IACX,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,mCAAmC;IACnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,SAAS;YACT,qBAAqB;YACrB,aAAa;QACf;kCAAG;QAAC;KAAI;IAER,uCAAuC;IACvC,MAAM,oBAAoB,CAAC,0EAA0E,EAAE,MAAM,CAAC,EAAE,OAAO,oCAAoC,EAAE,MAAM,UAAU,EAAE,OAAO,gBAAgB,CAAC;IAEvM,oBAAoB;IACpB,MAAM,aAAa;QACjB,aAAa;IACf;IAEA,qCAAqC;IACrC,MAAM,oBAAoB;QACxB,QAAQ,IAAI,CAAC,CAAC,8BAA8B,EAAE,KAAK;QACnD,qBAAqB;QACrB,aAAa;IACf;IAEA,8BAA8B;IAC9B,MAAM,sBAAsB;QAC1B,QAAQ,IAAI,CAAC,CAAC,4BAA4B,EAAE,KAAK;QACjD,SAAS;IACX;IAEA,uEAAuE;IACvE,MAAM,aAAkB;QACtB,KAAK;QACL,KAAK,OAAO;QACZ,OAAO;QACP,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,SAAS;QACT,GAAG,KAAK;QACR,WAAW,GAAG,MAAM,SAAS,IAAI,GAAG,CAAC,EAAE,YAAY,cAAc,cAAc,gCAAgC,CAAC;IAClH;IAEA,gDAAgD;IAChD,IAAI,UAAU;QACZ,WAAW,QAAQ,GAAG;IACtB,0CAA0C;IAC5C,OAAO,IAAI,SAAS;QAClB,WAAW,OAAO,GAAG;IACvB,OAAO;QACL,WAAW,OAAO,GAAG;IACvB;IAEA,2DAA2D;IAC3D,IAAI,mBAAmB;QACrB,qBACE,6LAAC;YAAI,WAAU;YAA2B,OAAO;gBAAE,YAAY;YAAU;sBACtE,CAAC,sBACA,6LAAC;gBACC,KAAK,OAAO,QAAQ,WAAW,MAAM;gBACrC,KAAK,OAAO;gBACZ,OAAO;gBACP,QAAQ;gBACR,SAAS;gBACT,SAAS,WAAW,UAAU;gBAC9B,WAAW,GAAG,MAAM,SAAS,IAAI,GAAG,2BAA2B,CAAC;;;;;uBAGlE,gEAAgE;0BAChE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;oBAA0B,MAAK;oBAAe,SAAQ;8BACnE,cAAA,6LAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;;;;;;IAMpB;IAEA,wCAAwC;IACxC,qBACE,6LAAC;QAAI,WAAU;QAA2B,OAAO;YAAE,YAAY;QAAU;;YACtE,2BACC,6LAAC;gBACC,WAAU;gBACV,eAAY;0BAEZ,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAGnB,6LAAC,gIAAA,CAAA,UAAK;gBAAE,GAAG,UAAU;;;;;;;;;;;;AAG3B;GAxGwB;KAAA","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/app/%28main%29/profile/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useAuth } from '../../../lib/authContext';\nimport { getUserOrders } from '../../../lib/firebaseUtils';\nimport { Order } from '../../../lib/types';\nimport { updateProfile, updatePassword, EmailAuthProvider, reauthenticateWithCredential } from 'firebase/auth';\nimport { auth } from '../../../lib/firebase';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { db } from '../../../lib/firebase';\nimport ImprovedImage from '../../../components/ImprovedImage';\nimport { toast } from 'react-hot-toast';\n\n// Helper function to generate mock orders for demo\nconst generateMockOrders = (userId: string): Order[] => {\n  const statuses = ['pending', 'processing', 'shipped', 'delivered'];\n  const orderCount = Math.floor(Math.random() * 5) + 1; // 1-5 orders\n  const mockOrders = [];\n  \n  for (let i = 0; i < orderCount; i++) {\n    const orderDate = new Date();\n    orderDate.setDate(orderDate.getDate() - (i * 7 + Math.floor(Math.random() * 10))); // Random past dates\n    \n    const order: Order = {\n      id: `mock-order-${Date.now()}-${i}`,\n      userId: userId,\n      items: [\n        {\n          id: `item-${i}-1`,\n          productId: `product-${i}-1`,\n          name: `Product ${i+1}`,\n          price: 19.99 + (i * 10),\n          image: `https://placehold.co/400x300?text=Product+${i+1}`,\n          quantity: 1 + Math.floor(Math.random() * 3)\n        }\n      ],\n      total: (19.99 + (i * 10)) * (1 + Math.floor(Math.random() * 3)),\n      status: statuses[Math.floor(Math.random() * statuses.length)] as any,\n      shippingAddress: {\n        name: 'John Doe',\n        address: '123 Main St',\n        city: 'Anytown',\n        state: 'CA',\n        postalCode: '12345',\n        country: 'US'\n      },\n      createdAt: orderDate.toISOString()\n    };\n    \n    mockOrders.push(order);\n  }\n  \n  return mockOrders;\n};\n\nexport default function ProfilePage() {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [displayName, setDisplayName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  \n  // Address fields\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n  const [phone, setPhone] = useState('');\n  \n  const [userSince, setUserSince] = useState('');\n  const [activeTab, setActiveTab] = useState('profile');\n  \n  // Password change states\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [passwordMessage, setPasswordMessage] = useState({ type: '', text: '' });\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n  useEffect(() => {\n    // If not loading and no user, redirect to login\n    if (!loading && !user) {\n      router.push('/login?redirect=/profile');\n    }\n\n    // Set display name from user data if available\n    if (user && user.displayName) {\n      setDisplayName(user.displayName);\n    }\n    \n    // Set user creation date\n    if (user && user.metadata && user.metadata.creationTime) {\n      const creationDate = new Date(user.metadata.creationTime);\n      setUserSince(creationDate.toLocaleDateString());\n    }\n    \n    // Fetch additional user data from Firestore\n    const fetchUserData = async () => {\n      if (user && user.uid) {\n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            // Set address info if available\n            if (userData.address) {\n              setAddress(userData.address.street || '');\n              setCity(userData.address.city || '');\n              setState(userData.address.state || '');\n              setPostalCode(userData.address.postalCode || '');\n              setCountry(userData.address.country || '');\n            }\n            if (userData.phone) {\n              setPhone(userData.phone);\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n        }\n      }\n    };\n    \n    if (user) {\n      fetchUserData();\n    }\n  }, [user, loading, router]);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      if (user) {\n        try {\n          if (process.env.NEXT_PUBLIC_USE_MOCK_SERVICES === 'true') {\n            // Generate mock orders for demo purposes\n            setOrders(generateMockOrders(user.uid));\n          } else {\n            // Real Firestore fetching\n            const userOrders = await getUserOrders(user.uid);\n            setOrders(userOrders);\n          }\n        } catch (error) {\n          console.error('Error fetching orders:', error);\n          // Fallback to mock orders if there's an error\n          setOrders(generateMockOrders(user.uid));\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    if (user) {\n      fetchOrders();\n    }\n  }, [user]);\n\n  const handleProfileUpdate = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user) return;\n\n    setIsSaving(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      if (process.env.NEXT_PUBLIC_USE_MOCK_SERVICES === 'true') {\n        // Mock update for demo purposes\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\n        toast.success('Profile updated successfully!');\n        setMessage({ \n          type: 'success', \n          text: 'Profile updated successfully!' \n        });\n      } else if (auth.currentUser) {\n        // Update the user's profile in Firebase Auth\n        await updateProfile(auth.currentUser, {\n          displayName: displayName\n        });\n        \n        // Also update in Firestore for additional user data\n        await setDoc(doc(db, 'users', user.uid), {\n          displayName: displayName,\n          email: user.email,\n          address: {\n            street: address,\n            city,\n            state,\n            postalCode,\n            country\n          },\n          phone,\n          updatedAt: new Date().toISOString()\n        }, { merge: true });\n        \n        toast.success('Profile updated successfully!');\n        setMessage({ \n          type: 'success', \n          text: 'Profile updated successfully!' \n        });\n      }\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      toast.error('Failed to update profile.');\n      setMessage({ \n        type: 'error', \n        text: 'Failed to update profile. Please try again.' \n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handlePasswordChange = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!user || !auth.currentUser) return;\n    \n    // Validate password\n    if (newPassword !== confirmNewPassword) {\n      setPasswordMessage({ \n        type: 'error', \n        text: 'New passwords do not match.'\n      });\n      return;\n    }\n    \n    // Password too short - Firebase requires at least 6 characters\n    if (newPassword.length < 6) {\n      setPasswordMessage({ \n        type: 'error', \n        text: 'Password must be at least 6 characters long.'\n      });\n      return;\n    }\n    \n    setIsChangingPassword(true);\n    setPasswordMessage({ type: '', text: '' });\n    \n    try {\n      if (process.env.NEXT_PUBLIC_USE_MOCK_SERVICES === 'true') {\n        // Mock password change for demo\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\n        toast.success('Password changed successfully!');\n        setPasswordMessage({ \n          type: 'success', \n          text: 'Password changed successfully!' \n        });\n        // Clear form\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmNewPassword('');\n      } else {\n        // Real Firebase password change workflow\n        // First, reauthenticate the user\n        const credential = EmailAuthProvider.credential(\n          user.email as string,\n          currentPassword\n        );\n        \n        await reauthenticateWithCredential(auth.currentUser, credential);\n        \n        // Then change their password\n        await updatePassword(auth.currentUser, newPassword);\n        \n        toast.success('Password changed successfully!');\n        setPasswordMessage({ \n          type: 'success', \n          text: 'Password changed successfully!' \n        });\n        \n        // Clear form\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmNewPassword('');\n      }\n    } catch (error: any) {\n      console.error('Error changing password:', error);\n      let errorMessage = 'Failed to change password. Please try again.';\n      \n      // More user-friendly error messages\n      if (error.code === 'auth/wrong-password') {\n        errorMessage = 'Current password is incorrect. Please try again.';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Too many unsuccessful attempts. Please try again later.';\n      }\n      \n      toast.error(errorMessage);\n      setPasswordMessage({ \n        type: 'error', \n        text: errorMessage\n      });\n    } finally {\n      setIsChangingPassword(false);\n    }\n  };\n\n  // Show loading state while fetching user data\n  if (loading || !user) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 py-12 flex justify-center\">\n        <div className=\"animate-pulse space-y-8 w-full max-w-xl\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\n          <div className=\"space-y-6\">\n            <div className=\"h-32 bg-gray-200 rounded\"></div>\n            <div className=\"h-32 bg-gray-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">Your Profile</h1>\n      \n      {/* Profile tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          <button\n            onClick={() => setActiveTab('profile')}\n            className={`pb-4 px-1 ${\n              activeTab === 'profile'\n                ? 'border-b-2 border-indigo-500 text-indigo-600 font-medium'\n                : 'border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Profile\n          </button>\n          <button\n            onClick={() => setActiveTab('security')}\n            className={`pb-4 px-1 ${\n              activeTab === 'security'\n                ? 'border-b-2 border-indigo-500 text-indigo-600 font-medium'\n                : 'border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Security\n          </button>\n          <button\n            onClick={() => setActiveTab('orders')}\n            className={`pb-4 px-1 ${\n              activeTab === 'orders'\n                ? 'border-b-2 border-indigo-500 text-indigo-600 font-medium'\n                : 'border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Orders\n          </button>\n        </nav>\n      </div>\n      \n      {activeTab === 'profile' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden mb-8\">\n          <div className=\"p-6\">\n            <div className=\"flex flex-col md:flex-row justify-between mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Account Information</h2>\n              \n              <div className=\"mt-2 md:mt-0 text-sm text-gray-500\">\n                Member since: {userSince || 'N/A'}\n              </div>\n            </div>\n            \n            {message.text && (\n              <div className={`mb-4 p-4 rounded ${\n                message.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n              }`}>\n                {message.text}\n              </div>\n            )}\n            \n            <form onSubmit={handleProfileUpdate}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={user.email || ''}\n                    disabled\n                    className=\"bg-gray-100 cursor-not-allowed w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700\"\n                    suppressHydrationWarning\n                  />\n                  <p className=\"mt-1 text-xs text-gray-500\">Email cannot be changed</p>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Display Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"displayName\"\n                    name=\"displayName\"\n                    value={displayName}\n                    onChange={(e) => setDisplayName(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone Number\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n              </div>\n              \n              <h3 className=\"text-lg font-medium text-gray-900 mt-8 mb-4\">Shipping Address</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Street Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    City\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    State / Province\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"state\"\n                    name=\"state\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Postal / ZIP Code\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"postalCode\"\n                    name=\"postalCode\"\n                    value={postalCode}\n                    onChange={(e) => setPostalCode(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Country\n                  </label>\n                  <select\n                    id=\"country\"\n                    name=\"country\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  >\n                    <option value=\"\">Select Country</option>\n                    <option value=\"US\">United States</option>\n                    <option value=\"CA\">Canada</option>\n                    <option value=\"UK\">United Kingdom</option>\n                    <option value=\"AU\">Australia</option>\n                    <option value=\"DE\">Germany</option>\n                    <option value=\"FR\">France</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end mt-6\">\n                <button\n                  type=\"submit\"\n                  disabled={isSaving}\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400\"\n                >\n                  {isSaving ? 'Saving...' : 'Save Changes'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      \n      {activeTab === 'security' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden mb-8\">\n          <div className=\"p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Security Settings</h2>\n            \n            {passwordMessage.text && (\n              <div className={`mb-4 p-4 rounded ${\n                passwordMessage.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'\n              }`}>\n                {passwordMessage.text}\n              </div>\n            )}\n            \n            <form onSubmit={handlePasswordChange}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Current Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    id=\"currentPassword\"\n                    value={currentPassword}\n                    onChange={(e) => setCurrentPassword(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    id=\"newPassword\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    required\n                    minLength={6}\n                  />\n                  <p className=\"mt-1 text-xs text-gray-500\">Password must be at least 6 characters long</p>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"confirmNewPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Confirm New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    id=\"confirmNewPassword\"\n                    value={confirmNewPassword}\n                    onChange={(e) => setConfirmNewPassword(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end mt-6\">\n                <button\n                  type=\"submit\"\n                  disabled={isChangingPassword}\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400\"\n                >\n                  {isChangingPassword ? 'Changing Password...' : 'Change Password'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n      \n      {activeTab === 'orders' && (\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">Order History</h2>\n            <p className=\"mt-1 text-sm text-gray-500\">View the status of your recent orders.</p>\n          </div>\n          \n          {isLoading ? (\n            <div className=\"p-6\">\n              <div className=\"animate-pulse space-y-4\">\n                <div className=\"h-12 bg-gray-200 rounded\"></div>\n                <div className=\"h-12 bg-gray-200 rounded\"></div>\n                <div className=\"h-12 bg-gray-200 rounded\"></div>\n              </div>\n            </div>\n          ) : orders.length > 0 ? (\n            <div className=\"border-t border-gray-200 divide-y divide-gray-200\">\n              {orders.map((order) => (\n                <div key={order.id} className=\"p-6\">\n                  <div className=\"flex flex-col md:flex-row justify-between mb-4\">\n                    <div>\n                      <h3 className=\"text-lg font-medium text-gray-900\">\n                        Order #{order.id.slice(-8)}\n                      </h3>\n                      <p className=\"text-sm text-gray-500\">\n                        Placed on {new Date(order.createdAt).toLocaleDateString()}\n                      </p>\n                    </div>\n                    <div className=\"mt-2 md:mt-0\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                        order.status === 'delivered' ? 'bg-green-100 text-green-800' :\n                        order.status === 'shipped' ? 'bg-blue-100 text-blue-800' :\n                        order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-4 space-y-4\">\n                    {order.items.map((item) => (\n                      <div key={item.id} className=\"flex items-center space-x-4\">\n                        <div className=\"flex-shrink-0 h-16 w-16 bg-gray-100 rounded-md overflow-hidden\">\n                          <ImprovedImage\n                            src={item.image}\n                            alt={item.name}\n                            width={64}\n                            height={64}\n                            className=\"h-full w-full object-center object-cover\"\n                          />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"text-sm font-medium text-gray-900 truncate\">\n                            {item.name}\n                          </p>\n                          <p className=\"text-sm text-gray-500\">\n                            Qty: {item.quantity}\n                          </p>\n                        </div>\n                        <div className=\"flex-shrink-0 text-sm font-medium text-gray-900\">\n                          ${(item.price * item.quantity).toFixed(2)}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"mt-6 flex justify-between border-t border-gray-200 pt-4\">\n                    <p className=\"text-sm font-medium text-gray-900\">Total</p>\n                    <p className=\"text-sm font-medium text-gray-900\">${order.total.toFixed(2)}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"p-6 text-center\">\n              <p className=\"text-gray-500\">You haven't placed any orders yet.</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}