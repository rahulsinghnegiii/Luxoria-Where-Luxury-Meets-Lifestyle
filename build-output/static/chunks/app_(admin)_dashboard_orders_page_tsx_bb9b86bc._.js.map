{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/app/%28admin%29/dashboard/orders/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '../../../../lib/authContext';\r\nimport Link from 'next/link';\r\nimport { getAllOrders, updateOrderStatus, batchUpdateOrderStatus } from '../../../../lib/firebaseUtils';\r\nimport { Order } from '../../../../lib/types';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Format date to a readable string\r\nconst formatDate = (dateString: string | undefined) => {\r\n  if (!dateString) return 'No date available';\r\n  \r\n  const date = new Date(dateString);\r\n  // Check if date is valid before formatting\r\n  if (isNaN(date.getTime())) {\r\n    return 'Invalid date';\r\n  }\r\n  \r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  }).format(date);\r\n};\r\n\r\nexport default function AdminOrdersPage() {\r\n  const { user, loading, isAdmin } = useAuth();\r\n  const router = useRouter();\r\n  \r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [filteredOrders, setFilteredOrders] = useState<Order[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateRange, setDateRange] = useState({ start: '', end: '' });\r\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\r\n  const [isBatchUpdating, setIsBatchUpdating] = useState(false);\r\n  const [batchStatus, setBatchStatus] = useState('');\r\n  const [updatingOrderId, setUpdatingOrderId] = useState<string | null>(null);\r\n  \r\n  // Statuses and their colors\r\n  const orderStatuses = [\r\n    { value: 'pending', label: 'Pending', color: 'bg-yellow-100 text-yellow-800' },\r\n    { value: 'processing', label: 'Processing', color: 'bg-blue-100 text-blue-800' },\r\n    { value: 'shipped', label: 'Shipped', color: 'bg-indigo-100 text-indigo-800' },\r\n    { value: 'delivered', label: 'Delivered', color: 'bg-green-100 text-green-800' },\r\n    { value: 'cancelled', label: 'Cancelled', color: 'bg-red-100 text-red-800' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // If not loading and either no user or not admin, redirect to login\r\n    if (!loading && (!user || !isAdmin)) {\r\n      router.push('/login?redirect=/dashboard');\r\n    }\r\n  }, [user, loading, isAdmin, router]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      if (user && isAdmin) {\r\n        try {\r\n          setIsLoading(true);\r\n          const fetchedOrders = await getAllOrders();\r\n          // Sort by date, newest first\r\n          fetchedOrders.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\r\n          setOrders(fetchedOrders);\r\n          setFilteredOrders(fetchedOrders);\r\n        } catch (error) {\r\n          console.error('Error fetching orders:', error);\r\n          toast.error('Failed to load orders');\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (user && isAdmin) {\r\n      fetchOrders();\r\n    }\r\n  }, [user, isAdmin]);\r\n\r\n  // Apply filters when statusFilter or searchQuery changes\r\n  useEffect(() => {\r\n    let result = [...orders];\r\n    \r\n    // Apply status filter\r\n    if (statusFilter !== 'all') {\r\n      result = result.filter(order => order.status === statusFilter);\r\n    }\r\n    \r\n    // Apply search filter (case insensitive)\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      result = result.filter(order => \r\n        order.id.toLowerCase().includes(query) ||\r\n        order.userId.toLowerCase().includes(query) ||\r\n        (order.shippingAddress && order.shippingAddress.name?.toLowerCase().includes(query)) ||\r\n        (order.shippingAddress && order.shippingAddress.email?.toLowerCase().includes(query))\r\n      );\r\n    }\r\n    \r\n    // Apply date range filter\r\n    if (dateRange.start) {\r\n      const startDate = new Date(dateRange.start);\r\n      result = result.filter(order => new Date(order.createdAt) >= startDate);\r\n    }\r\n    \r\n    if (dateRange.end) {\r\n      const endDate = new Date(dateRange.end);\r\n      endDate.setHours(23, 59, 59, 999); // End of day\r\n      result = result.filter(order => new Date(order.createdAt) <= endDate);\r\n    }\r\n    \r\n    setFilteredOrders(result);\r\n  }, [orders, statusFilter, searchQuery, dateRange]);\r\n\r\n  const handleStatusChange = async (orderId: string, newStatus: string) => {\r\n    try {\r\n      setUpdatingOrderId(orderId);\r\n      await updateOrderStatus(orderId, newStatus);\r\n      \r\n      // Update the orders state with the new status\r\n      setOrders(prevOrders => \r\n        prevOrders.map(order => \r\n          order.id === orderId ? { ...order, status: newStatus } : order\r\n        )\r\n      );\r\n      \r\n      toast.success(`Order ${orderId.substring(0, 8)}... status updated to ${newStatus}`);\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      toast.error('Failed to update order status');\r\n    } finally {\r\n      setUpdatingOrderId(null);\r\n    }\r\n  };\r\n\r\n  const handleBatchStatusChange = async () => {\r\n    if (!batchStatus || selectedOrders.length === 0) {\r\n      toast.error('Please select orders and a status to update');\r\n      return;\r\n    }\r\n\r\n    setIsBatchUpdating(true);\r\n    \r\n    try {\r\n      // Use the new batch update function for better performance\r\n      await batchUpdateOrderStatus(selectedOrders, batchStatus);\r\n      \r\n      // Update the orders state with the new status\r\n      setOrders(prevOrders => \r\n        prevOrders.map(order => \r\n          selectedOrders.includes(order.id) \r\n            ? { ...order, status: batchStatus } \r\n            : order\r\n        )\r\n      );\r\n      \r\n      toast.success(`Updated ${selectedOrders.length} orders to ${batchStatus}`);\r\n      setSelectedOrders([]);\r\n      setBatchStatus('');\r\n    } catch (error) {\r\n      console.error('Error updating order statuses:', error);\r\n      toast.error('Failed to update some orders');\r\n    } finally {\r\n      setIsBatchUpdating(false);\r\n    }\r\n  };\r\n\r\n  const toggleOrderSelection = (orderId: string) => {\r\n    setSelectedOrders(prev => \r\n      prev.includes(orderId)\r\n        ? prev.filter(id => id !== orderId)\r\n        : [...prev, orderId]\r\n    );\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    if (selectedOrders.length === filteredOrders.length) {\r\n      setSelectedOrders([]);\r\n    } else {\r\n      setSelectedOrders(filteredOrders.map(order => order.id));\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setStatusFilter('all');\r\n    setSearchQuery('');\r\n    setDateRange({ start: '', end: '' });\r\n    setSelectedOrders([]);\r\n    setBatchStatus('');\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const statusObj = orderStatuses.find(s => s.value === status) || \r\n      { color: 'bg-gray-100 text-gray-800', label: status };\r\n    \r\n    return (\r\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusObj.color}`}>\r\n        {statusObj.label}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  if (loading || !user || !isAdmin) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\r\n          <div className=\"h-64 bg-gray-200 rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n      <div className=\"md:flex md:items-center md:justify-between mb-8\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl\">\r\n            Orders Management\r\n          </h2>\r\n          <p className=\"mt-1 text-sm text-gray-700\">\r\n            Manage and track customer orders\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white shadow rounded-lg mb-8\">\r\n        <div className=\"p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Filters</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {/* Status filter */}\r\n            <div>\r\n              <label htmlFor=\"status-filter\" className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n                Status\r\n              </label>\r\n              <select\r\n                id=\"status-filter\"\r\n                value={statusFilter}\r\n                onChange={(e) => setStatusFilter(e.target.value)}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm text-gray-900\"\r\n              >\r\n                <option value=\"all\">All Statuses</option>\r\n                {orderStatuses.map((status) => (\r\n                  <option key={status.value} value={status.value}>\r\n                    {status.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            {/* Search filter */}\r\n            <div>\r\n              <label htmlFor=\"search-filter\" className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n                Search\r\n              </label>\r\n              <input\r\n                id=\"search-filter\"\r\n                type=\"text\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                placeholder=\"Order ID, Customer name or email\"\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm text-gray-900 placeholder-gray-700\"\r\n              />\r\n            </div>\r\n            \r\n            {/* Date filter */}\r\n            <div className=\"space-y-2\">\r\n              <div>\r\n                <label htmlFor=\"date-from\" className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n                  From Date\r\n                </label>\r\n                <input\r\n                  id=\"date-from\"\r\n                  type=\"date\"\r\n                  value={dateRange.start}\r\n                  onChange={(e) => setDateRange({ ...dateRange, start: e.target.value })}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm text-gray-900\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"date-to\" className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n                  To Date\r\n                </label>\r\n                <input\r\n                  id=\"date-to\"\r\n                  type=\"date\"\r\n                  value={dateRange.end}\r\n                  onChange={(e) => setDateRange({ ...dateRange, end: e.target.value })}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm text-gray-900\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-4 flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={clearFilters}\r\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Batch Update Panel - New addition */}\r\n      {selectedOrders.length > 0 && (\r\n        <div className=\"bg-indigo-50 border border-indigo-200 rounded-lg mb-8 p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-sm font-medium text-indigo-800 mr-4\">\r\n                {selectedOrders.length} order{selectedOrders.length > 1 ? 's' : ''} selected\r\n              </span>\r\n              <select\r\n                value={batchStatus}\r\n                onChange={(e) => setBatchStatus(e.target.value)}\r\n                className=\"block w-48 border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm mr-4 text-gray-900\"\r\n              >\r\n                <option value=\"\">Change status to...</option>\r\n                {orderStatuses.map((status) => (\r\n                  <option key={status.value} value={status.value}>\r\n                    {status.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button\r\n                onClick={handleBatchStatusChange}\r\n                disabled={!batchStatus || isBatchUpdating}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:bg-indigo-400 disabled:cursor-not-allowed\"\r\n              >\r\n                {isBatchUpdating ? (\r\n                  <>\r\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Updating...\r\n                  </>\r\n                ) : (\r\n                  'Update Orders'\r\n                )}\r\n              </button>\r\n            </div>\r\n            <button\r\n              onClick={() => setSelectedOrders([])}\r\n              className=\"text-indigo-600 hover:text-indigo-800 text-sm font-medium\"\r\n            >\r\n              Clear selection\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Orders table */}\r\n      <div className=\"bg-white shadow overflow-hidden rounded-lg\">\r\n        {isLoading ? (\r\n          <div className=\"p-8\">\r\n            <div className=\"animate-pulse space-y-4\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\r\n              <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\r\n              <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\r\n              <div className=\"h-4 bg-gray-200 rounded w-3/5\"></div>\r\n              <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\r\n            </div>\r\n          </div>\r\n        ) : filteredOrders.length === 0 ? (\r\n          <div className=\"p-8 text-center\">\r\n            <p className=\"text-gray-500\">No orders found matching your filters</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedOrders.length === filteredOrders.length && filteredOrders.length > 0}\r\n                        onChange={toggleSelectAll}\r\n                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Order ID\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Date\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Customer\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Total\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredOrders.map((order) => (\r\n                  <tr key={order.id} className={selectedOrders.includes(order.id) ? \"bg-indigo-50\" : \"\"}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedOrders.includes(order.id)}\r\n                        onChange={() => toggleOrderSelection(order.id)}\r\n                        className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      <Link href={`/dashboard/orders/${order.id}`} className=\"text-indigo-600 hover:text-indigo-900\">\r\n                        {order.id.substring(0, 8)}...\r\n                      </Link>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                      {formatDate(order.createdAt)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                      {order.shippingAddress?.name || 'N/A'}<br />\r\n                      <span className=\"text-xs text-gray-600\">{order.shippingAddress?.email || 'No email'}</span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                      ${order.total.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {getStatusBadge(order.status)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                      <div className=\"flex space-x-3\">\r\n                        {updatingOrderId === order.id ? (\r\n                          <span className=\"flex items-center\">\r\n                            <svg className=\"animate-spin h-4 w-4 text-indigo-600 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                            </svg>\r\n                            Updating...\r\n                          </span>\r\n                        ) : (\r\n                          <select\r\n                            value={order.status}\r\n                            onChange={(e) => {\r\n                              if (window.confirm(`Are you sure you want to change the status to ${e.target.value}?`)) {\r\n                                handleStatusChange(order.id, e.target.value);\r\n                              }\r\n                            }}\r\n                            className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm text-gray-900\"\r\n                          >\r\n                            {orderStatuses.map((status) => (\r\n                              <option key={status.value} value={status.value}>\r\n                                {status.label}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        )}\r\n                        <Link \r\n                          href={`/dashboard/orders/${order.id}`}\r\n                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        >\r\n                          View\r\n                        </Link>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Order statistics cards */}\r\n      <div className=\"mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n        {orderStatuses.map((status) => {\r\n          const count = orders.filter(order => order.status === status.value).length;\r\n          return (\r\n            <div key={status.value} className={`bg-white overflow-hidden shadow rounded-lg ${status.color.replace('text-', 'border-t-4 border-')}`}>\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <dl>\r\n                  <dt className=\"text-sm font-medium text-gray-700 truncate\">\r\n                    {status.label} Orders\r\n                  </dt>\r\n                  <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\r\n                    {count}\r\n                  </dd>\r\n                </dl>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AARA;;;;;;;AAUA,mCAAmC;AACnC,MAAM,aAAa,CAAC;IAClB,IAAI,CAAC,YAAY,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,2CAA2C;IAC3C,IAAI,MAAM,KAAK,OAAO,KAAK;QACzB,OAAO;IACT;IAEA,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ;AAEe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sHAAA,CAAA,UAAO,AAAD;IACzC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAI,KAAK;IAAG;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtE,4BAA4B;IAC5B,MAAM,gBAAgB;QACpB;YAAE,OAAO;YAAW,OAAO;YAAW,OAAO;QAAgC;QAC7E;YAAE,OAAO;YAAc,OAAO;YAAc,OAAO;QAA4B;QAC/E;YAAE,OAAO;YAAW,OAAO;YAAW,OAAO;QAAgC;QAC7E;YAAE,OAAO;YAAa,OAAO;YAAa,OAAO;QAA8B;QAC/E;YAAE,OAAO;YAAa,OAAO;YAAa,OAAO;QAA0B;KAC5E;IAED,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,oEAAoE;YACpE,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,GAAG;gBACnC,OAAO,IAAI,CAAC;YACd;QACF;oCAAG;QAAC;QAAM;QAAS;QAAS;KAAO;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;yDAAc;oBAClB,IAAI,QAAQ,SAAS;wBACnB,IAAI;4BACF,aAAa;4BACb,MAAM,gBAAgB,MAAM,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD;4BACvC,6BAA6B;4BAC7B,cAAc,IAAI;yEAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;;4BAC5F,UAAU;4BACV,kBAAkB;wBACpB,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,0BAA0B;4BACxC,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;wBACd,SAAU;4BACR,aAAa;wBACf;oBACF;gBACF;;YAEA,IAAI,QAAQ,SAAS;gBACnB;YACF;QACF;oCAAG;QAAC;QAAM;KAAQ;IAElB,yDAAyD;IACzD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,SAAS;mBAAI;aAAO;YAExB,sBAAsB;YACtB,IAAI,iBAAiB,OAAO;gBAC1B,SAAS,OAAO,MAAM;iDAAC,CAAA,QAAS,MAAM,MAAM,KAAK;;YACnD;YAEA,yCAAyC;YACzC,IAAI,aAAa;gBACf,MAAM,QAAQ,YAAY,WAAW;gBACrC,SAAS,OAAO,MAAM;iDAAC,CAAA,QACrB,MAAM,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,UAChC,MAAM,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC,MAAM,eAAe,IAAI,MAAM,eAAe,CAAC,IAAI,EAAE,cAAc,SAAS,UAC5E,MAAM,eAAe,IAAI,MAAM,eAAe,CAAC,KAAK,EAAE,cAAc,SAAS;;YAElF;YAEA,0BAA0B;YAC1B,IAAI,UAAU,KAAK,EAAE;gBACnB,MAAM,YAAY,IAAI,KAAK,UAAU,KAAK;gBAC1C,SAAS,OAAO,MAAM;iDAAC,CAAA,QAAS,IAAI,KAAK,MAAM,SAAS,KAAK;;YAC/D;YAEA,IAAI,UAAU,GAAG,EAAE;gBACjB,MAAM,UAAU,IAAI,KAAK,UAAU,GAAG;gBACtC,QAAQ,QAAQ,CAAC,IAAI,IAAI,IAAI,MAAM,aAAa;gBAChD,SAAS,OAAO,MAAM;iDAAC,CAAA,QAAS,IAAI,KAAK,MAAM,SAAS,KAAK;;YAC/D;YAEA,kBAAkB;QACpB;oCAAG;QAAC;QAAQ;QAAc;QAAa;KAAU;IAEjD,MAAM,qBAAqB,OAAO,SAAiB;QACjD,IAAI;YACF,mBAAmB;YACnB,MAAM,CAAA,GAAA,uHAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS;YAEjC,8CAA8C;YAC9C,UAAU,CAAA,aACR,WAAW,GAAG,CAAC,CAAA,QACb,MAAM,EAAE,KAAK,UAAU;wBAAE,GAAG,KAAK;wBAAE,QAAQ;oBAAU,IAAI;YAI7D,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,QAAQ,SAAS,CAAC,GAAG,GAAG,sBAAsB,EAAE,WAAW;QACpF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,mBAAmB;QACrB;IACF;IAEA,MAAM,0BAA0B;QAC9B,IAAI,CAAC,eAAe,eAAe,MAAM,KAAK,GAAG;YAC/C,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ;QACF;QAEA,mBAAmB;QAEnB,IAAI;YACF,2DAA2D;YAC3D,MAAM,CAAA,GAAA,uHAAA,CAAA,yBAAsB,AAAD,EAAE,gBAAgB;YAE7C,8CAA8C;YAC9C,UAAU,CAAA,aACR,WAAW,GAAG,CAAC,CAAA,QACb,eAAe,QAAQ,CAAC,MAAM,EAAE,IAC5B;wBAAE,GAAG,KAAK;wBAAE,QAAQ;oBAAY,IAChC;YAIR,0JAAA,CAAA,QAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,eAAe,MAAM,CAAC,WAAW,EAAE,aAAa;YACzE,kBAAkB,EAAE;YACpB,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,mBAAmB;QACrB;IACF;IAEA,MAAM,uBAAuB,CAAC;QAC5B,kBAAkB,CAAA,OAChB,KAAK,QAAQ,CAAC,WACV,KAAK,MAAM,CAAC,CAAA,KAAM,OAAO,WACzB;mBAAI;gBAAM;aAAQ;IAE1B;IAEA,MAAM,kBAAkB;QACtB,IAAI,eAAe,MAAM,KAAK,eAAe,MAAM,EAAE;YACnD,kBAAkB,EAAE;QACtB,OAAO;YACL,kBAAkB,eAAe,GAAG,CAAC,CAAA,QAAS,MAAM,EAAE;QACxD;IACF;IAEA,MAAM,eAAe;QACnB,gBAAgB;QAChB,eAAe;QACf,aAAa;YAAE,OAAO;YAAI,KAAK;QAAG;QAClC,kBAAkB,EAAE;QACpB,eAAe;IACjB;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,YAAY,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,WACpD;YAAE,OAAO;YAA6B,OAAO;QAAO;QAEtD,qBACE,6LAAC;YAAK,WAAW,CAAC,wEAAwE,EAAE,UAAU,KAAK,EAAE;sBAC1G,UAAU,KAAK;;;;;;IAGtB;IAEA,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS;QAChC,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;IAIvB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAyD;;;;;;sCAGvE,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;;;;;;0BAO9C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAyC;;;;;;sCAEvD,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAgB,WAAU;sDAA+C;;;;;;sDAGxF,6LAAC;4CACC,IAAG;4CACH,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;4CAC/C,WAAU;;8DAEV,6LAAC;oDAAO,OAAM;8DAAM;;;;;;gDACnB,cAAc,GAAG,CAAC,CAAC,uBAClB,6LAAC;wDAA0B,OAAO,OAAO,KAAK;kEAC3C,OAAO,KAAK;uDADF,OAAO,KAAK;;;;;;;;;;;;;;;;;8CAQ/B,6LAAC;;sDACC,6LAAC;4CAAM,SAAQ;4CAAgB,WAAU;sDAA+C;;;;;;sDAGxF,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4CAC9C,aAAY;4CACZ,WAAU;;;;;;;;;;;;8CAKd,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAM,SAAQ;oDAAY,WAAU;8DAA+C;;;;;;8DAGpF,6LAAC;oDACC,IAAG;oDACH,MAAK;oDACL,OAAO,UAAU,KAAK;oDACtB,UAAU,CAAC,IAAM,aAAa;4DAAE,GAAG,SAAS;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAC;oDACpE,WAAU;;;;;;;;;;;;sDAGd,6LAAC;;8DACC,6LAAC;oDAAM,SAAQ;oDAAU,WAAU;8DAA+C;;;;;;8DAGlF,6LAAC;oDACC,IAAG;oDACH,MAAK;oDACL,OAAO,UAAU,GAAG;oDACpB,UAAU,CAAC,IAAM,aAAa;4DAAE,GAAG,SAAS;4DAAE,KAAK,EAAE,MAAM,CAAC,KAAK;wDAAC;oDAClE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;sCAMlB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCACC,MAAK;gCACL,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;YAQN,eAAe,MAAM,GAAG,mBACvB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;;wCACb,eAAe,MAAM;wCAAC;wCAAO,eAAe,MAAM,GAAG,IAAI,MAAM;wCAAG;;;;;;;8CAErE,6LAAC;oCACC,OAAO;oCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;oCAC9C,WAAU;;sDAEV,6LAAC;4CAAO,OAAM;sDAAG;;;;;;wCAChB,cAAc,GAAG,CAAC,CAAC,uBAClB,6LAAC;gDAA0B,OAAO,OAAO,KAAK;0DAC3C,OAAO,KAAK;+CADF,OAAO,KAAK;;;;;;;;;;;8CAK7B,6LAAC;oCACC,SAAS;oCACT,UAAU,CAAC,eAAe;oCAC1B,WAAU;8CAET,gCACC;;0DACE,6LAAC;gDAAI,WAAU;gDAA6C,OAAM;gDAA6B,MAAK;gDAAO,SAAQ;;kEACjH,6LAAC;wDAAO,WAAU;wDAAa,IAAG;wDAAK,IAAG;wDAAK,GAAE;wDAAK,QAAO;wDAAe,aAAY;;;;;;kEACxF,6LAAC;wDAAK,WAAU;wDAAa,MAAK;wDAAe,GAAE;;;;;;;;;;;;4CAC/C;;uDAIR;;;;;;;;;;;;sCAIN,6LAAC;4BACC,SAAS,IAAM,kBAAkB,EAAE;4BACnC,WAAU;sCACX;;;;;;;;;;;;;;;;;0BAQP,6LAAC;gBAAI,WAAU;0BACZ,0BACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;2BAGjB,eAAe,MAAM,KAAK,kBAC5B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;yCAG/B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,WAAU;0CACf,cAAA,6LAAC;;sDACC,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDACxB,cAAA,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC;oDACC,MAAK;oDACL,SAAS,eAAe,MAAM,KAAK,eAAe,MAAM,IAAI,eAAe,MAAM,GAAG;oDACpF,UAAU;oDACV,WAAU;;;;;;;;;;;;;;;;sDAIhB,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;sDAG3G,6LAAC;4CAAG,OAAM;4CAAM,WAAU;sDAAiF;;;;;;;;;;;;;;;;;0CAK/G,6LAAC;gCAAM,WAAU;0CACd,eAAe,GAAG,CAAC,CAAC,sBACnB,6LAAC;wCAAkB,WAAW,eAAe,QAAQ,CAAC,MAAM,EAAE,IAAI,iBAAiB;;0DACjF,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDACC,MAAK;oDACL,SAAS,eAAe,QAAQ,CAAC,MAAM,EAAE;oDACzC,UAAU,IAAM,qBAAqB,MAAM,EAAE;oDAC7C,WAAU;;;;;;;;;;;0DAGd,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC,+JAAA,CAAA,UAAI;oDAAC,MAAM,CAAC,kBAAkB,EAAE,MAAM,EAAE,EAAE;oDAAE,WAAU;;wDACpD,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG;wDAAG;;;;;;;;;;;;0DAG9B,6LAAC;gDAAG,WAAU;0DACX,WAAW,MAAM,SAAS;;;;;;0DAE7B,6LAAC;gDAAG,WAAU;;oDACX,MAAM,eAAe,EAAE,QAAQ;kEAAM,6LAAC;;;;;kEACvC,6LAAC;wDAAK,WAAU;kEAAyB,MAAM,eAAe,EAAE,SAAS;;;;;;;;;;;;0DAE3E,6LAAC;gDAAG,WAAU;;oDAAoD;oDAC9D,MAAM,KAAK,CAAC,OAAO,CAAC;;;;;;;0DAExB,6LAAC;gDAAG,WAAU;0DACX,eAAe,MAAM,MAAM;;;;;;0DAE9B,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;wDACZ,oBAAoB,MAAM,EAAE,iBAC3B,6LAAC;4DAAK,WAAU;;8EACd,6LAAC;oEAAI,WAAU;oEAA4C,OAAM;oEAA6B,MAAK;oEAAO,SAAQ;;sFAChH,6LAAC;4EAAO,WAAU;4EAAa,IAAG;4EAAK,IAAG;4EAAK,GAAE;4EAAK,QAAO;4EAAe,aAAY;;;;;;sFACxF,6LAAC;4EAAK,WAAU;4EAAa,MAAK;4EAAe,GAAE;;;;;;;;;;;;gEAC/C;;;;;;iFAIR,6LAAC;4DACC,OAAO,MAAM,MAAM;4DACnB,UAAU,CAAC;gEACT,IAAI,OAAO,OAAO,CAAC,CAAC,8CAA8C,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG;oEACtF,mBAAmB,MAAM,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;gEAC7C;4DACF;4DACA,WAAU;sEAET,cAAc,GAAG,CAAC,CAAC,uBAClB,6LAAC;oEAA0B,OAAO,OAAO,KAAK;8EAC3C,OAAO,KAAK;mEADF,OAAO,KAAK;;;;;;;;;;sEAM/B,6LAAC,+JAAA,CAAA,UAAI;4DACH,MAAM,CAAC,kBAAkB,EAAE,MAAM,EAAE,EAAE;4DACrC,WAAU;sEACX;;;;;;;;;;;;;;;;;;uCAzDE,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;0BAuE7B,6LAAC;gBAAI,WAAU;0BACZ,cAAc,GAAG,CAAC,CAAC;oBAClB,MAAM,QAAQ,OAAO,MAAM,CAAC,CAAA,QAAS,MAAM,MAAM,KAAK,OAAO,KAAK,EAAE,MAAM;oBAC1E,qBACE,6LAAC;wBAAuB,WAAW,CAAC,2CAA2C,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,SAAS,uBAAuB;kCACpI,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;;4CACX,OAAO,KAAK;4CAAC;;;;;;;kDAEhB,6LAAC;wCAAG,WAAU;kDACX;;;;;;;;;;;;;;;;;uBAPC,OAAO,KAAK;;;;;gBAa1B;;;;;;;;;;;;AAIR;GA7dwB;;QACa,sHAAA,CAAA,UAAO;QAC3B,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}