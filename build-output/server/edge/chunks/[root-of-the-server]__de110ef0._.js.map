{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Configuration for protected routes (requiring authentication)\nconst protectedRoutes = [\n  '/profile',\n  '/orders',\n  '/wishlist',\n];\n\n// Routes that allow guest checkout but could benefit from authentication\nconst guestCheckoutRoutes = [\n  '/checkout',\n];\n\n// Admin-only routes (requiring admin privileges)\nconst adminRoutes = [\n  '/dashboard',\n  '/admin',\n];\n\n// Payment-related routes (requiring active checkout session)\nconst paymentRoutes = [\n  '/checkout/success',\n  '/checkout/payment',\n];\n\nexport function middleware(request: NextRequest) {\n  // Get the path of the request\n  const path = request.nextUrl.pathname;\n\n  // Get auth and session cookies\n  const authToken = request.cookies.get('auth_token')?.value;\n  const userRole = request.cookies.get('user_role')?.value;\n  const checkoutSessionId = request.cookies.get('checkout_session_id')?.value;\n  \n  // Function to check if the current path matches routes arrays\n  const isProtectedRoute = protectedRoutes.some(route => path.startsWith(route));\n  const isAdminRoute = adminRoutes.some(route => path.startsWith(route));\n  const isPaymentRoute = paymentRoutes.some(route => path.startsWith(route));\n  const isGuestCheckoutRoute = guestCheckoutRoutes.some(route => path.startsWith(route));\n  \n  // Build a properly encoded redirect URL with the original path for later redirect back\n  const encodedRedirectPath = encodeURIComponent(request.nextUrl.pathname + request.nextUrl.search);\n  const loginRedirectUrl = new URL(`/login?redirect=${encodedRedirectPath}`, request.url);\n\n  // Handle authenticated routes\n  if (isProtectedRoute && !authToken) {\n    console.log(`Redirecting unauthenticated user from ${path} to login`);\n    return NextResponse.redirect(loginRedirectUrl);\n  }\n\n  // Handle admin routes with strict permission check\n  if (isAdminRoute) {\n    // Check both authentication and admin role\n    if (!authToken) {\n      console.log(`Redirecting unauthenticated user from admin route ${path} to login`);\n      return NextResponse.redirect(loginRedirectUrl);\n    }\n    \n    if (userRole !== 'admin') {\n      console.log(`Redirecting non-admin user from ${path} to home`);\n      return NextResponse.redirect(new URL('/', request.url));\n    }\n  }\n\n  // Handle payment routes requiring active checkout session\n  if (isPaymentRoute && !checkoutSessionId) {\n    console.log(`Redirecting user from payment route ${path} to checkout`);\n    return NextResponse.redirect(new URL('/checkout', request.url));\n  }\n  \n  // Additional security headers for all responses\n  const response = NextResponse.next();\n  \n  // Set common security headers\n  response.headers.set('X-Frame-Options', 'DENY');\n  response.headers.set('X-Content-Type-Options', 'nosniff');\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\n  \n  return response;\n}\n\n// Define the middleware matcher with all paths that should be protected\nexport const config = {\n  matcher: [\n    '/profile/:path*', \n    '/orders/:path*', \n    '/dashboard/:path*',\n    '/admin/:path*',\n    '/checkout/:path*',\n    '/wishlist/:path*',\n  ]\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,gEAAgE;AAChE,MAAM,kBAAkB;IACtB;IACA;IACA;CACD;AAED,yEAAyE;AACzE,MAAM,sBAAsB;IAC1B;CACD;AAED,iDAAiD;AACjD,MAAM,cAAc;IAClB;IACA;CACD;AAED,6DAA6D;AAC7D,MAAM,gBAAgB;IACpB;IACA;CACD;AAEM,SAAS,WAAW,OAAoB;IAC7C,8BAA8B;IAC9B,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,+BAA+B;IAC/B,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;IACrD,MAAM,WAAW,QAAQ,OAAO,CAAC,GAAG,CAAC,cAAc;IACnD,MAAM,oBAAoB,QAAQ,OAAO,CAAC,GAAG,CAAC,wBAAwB;IAEtE,8DAA8D;IAC9D,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAAS,KAAK,UAAU,CAAC;IACvE,MAAM,eAAe,YAAY,IAAI,CAAC,CAAA,QAAS,KAAK,UAAU,CAAC;IAC/D,MAAM,iBAAiB,cAAc,IAAI,CAAC,CAAA,QAAS,KAAK,UAAU,CAAC;IACnE,MAAM,uBAAuB,oBAAoB,IAAI,CAAC,CAAA,QAAS,KAAK,UAAU,CAAC;IAE/E,uFAAuF;IACvF,MAAM,sBAAsB,mBAAmB,QAAQ,OAAO,CAAC,QAAQ,GAAG,QAAQ,OAAO,CAAC,MAAM;IAChG,MAAM,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,EAAE,qBAAqB,EAAE,QAAQ,GAAG;IAEtF,8BAA8B;IAC9B,IAAI,oBAAoB,CAAC,WAAW;QAClC,QAAQ,GAAG,CAAC,CAAC,sCAAsC,EAAE,KAAK,SAAS,CAAC;QACpE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,mDAAmD;IACnD,IAAI,cAAc;QAChB,2CAA2C;QAC3C,IAAI,CAAC,WAAW;YACd,QAAQ,GAAG,CAAC,CAAC,kDAAkD,EAAE,KAAK,SAAS,CAAC;YAChF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;QAC/B;QAEA,IAAI,aAAa,SAAS;YACxB,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,KAAK,QAAQ,CAAC;YAC7D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QACvD;IACF;IAEA,0DAA0D;IAC1D,IAAI,kBAAkB,CAAC,mBAAmB;QACxC,QAAQ,GAAG,CAAC,CAAC,oCAAoC,EAAE,KAAK,YAAY,CAAC;QACrE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,aAAa,QAAQ,GAAG;IAC/D;IAEA,gDAAgD;IAChD,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;IAElC,8BAA8B;IAC9B,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,0BAA0B;IAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,sBAAsB;IAE3C,OAAO;AACT;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;KACD;AACH"}}]
}