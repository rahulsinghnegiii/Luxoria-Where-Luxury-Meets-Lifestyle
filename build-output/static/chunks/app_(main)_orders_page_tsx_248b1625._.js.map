{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/e-commerce-store/app/%28main%29/orders/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/lib/authContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { motion } from 'framer-motion';\r\nimport { FiShoppingBag, FiChevronRight, FiAlertTriangle } from 'react-icons/fi';\r\nimport { BiPackage } from 'react-icons/bi';\r\nimport { getUserOrders } from '@/lib/firebaseUtils';\r\nimport { Order } from '@/lib/types';\r\n\r\n// Define the order interface for this page\r\ninterface OrderDisplay {\r\n  id: string;\r\n  date: string;\r\n  total: number;\r\n  status: 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'pending';\r\n  items: number;\r\n}\r\n\r\nexport default function OrdersPage() {\r\n  const { user, loading } = useAuth();\r\n  const router = useRouter();\r\n  const [orders, setOrders] = useState<OrderDisplay[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // If not loading and no user, redirect to login\r\n    if (!loading && !user) {\r\n      router.push('/login?redirect=/orders');\r\n      return;\r\n    }\r\n\r\n    // Fetch orders if user is authenticated\r\n    if (user) {\r\n      fetchOrders();\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  const fetchOrders = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Fetch real orders from Firebase using getUserOrders function\r\n      const userOrders = await getUserOrders(user?.uid || '');\r\n      \r\n      // Transform the orders to match the OrderDisplay interface\r\n      const displayOrders: OrderDisplay[] = userOrders.map(order => ({\r\n        id: order.id,\r\n        date: order.createdAt,\r\n        total: order.total,\r\n        status: order.status as 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'pending',\r\n        items: order.items.reduce((total, item) => total + item.quantity, 0)\r\n      }));\r\n      \r\n      setOrders(displayOrders);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n      setError('Failed to load your orders. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to get status badge color\r\n  const getStatusColor = (status: OrderDisplay['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'bg-gray-500';\r\n      case 'processing':\r\n        return 'bg-yellow-500';\r\n      case 'shipped':\r\n        return 'bg-blue-500';\r\n      case 'delivered':\r\n        return 'bg-green-500';\r\n      case 'cancelled':\r\n        return 'bg-red-500';\r\n      default:\r\n        return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  // Handle case where user is not authenticated\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto py-20 px-4 min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-pulse flex flex-col items-center\">\r\n          <div className=\"h-12 w-48 bg-gray-200 rounded-md mb-4\"></div>\r\n          <div className=\"h-6 w-64 bg-gray-200 rounded-md\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-20 px-4 min-h-screen\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"mb-10\"\r\n        >\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-600 mb-2\">\r\n            Your Orders\r\n          </h1>\r\n          <p className=\"text-gray-400\">\r\n            View and track all your Luxoria purchases\r\n          </p>\r\n        </motion.div>\r\n\r\n        {isLoading ? (\r\n          // Loading state\r\n          <div className=\"grid gap-4\">\r\n            {[1, 2, 3].map((i) => (\r\n              <div key={i} className=\"animate-pulse bg-gray-800/50 rounded-lg p-6\">\r\n                <div className=\"h-6 bg-gray-700 rounded w-1/3 mb-4\"></div>\r\n                <div className=\"h-4 bg-gray-700 rounded w-1/4 mb-2\"></div>\r\n                <div className=\"h-4 bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : error ? (\r\n          // Error state\r\n          <div className=\"bg-red-500/10 border border-red-500/30 rounded-lg p-6 text-center\">\r\n            <FiAlertTriangle className=\"mx-auto h-10 w-10 text-red-500 mb-4\" />\r\n            <p className=\"text-red-200 mb-4\">{error}</p>\r\n            <button \r\n              onClick={fetchOrders}\r\n              className=\"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-md transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        ) : orders.length === 0 ? (\r\n          // Empty state\r\n          <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-10 text-center\">\r\n            <FiShoppingBag className=\"mx-auto h-16 w-16 text-gray-600 mb-6\" />\r\n            <h3 className=\"text-xl font-medium text-white mb-2\">No orders yet</h3>\r\n            <p className=\"text-gray-400 mb-6\">\r\n              When you place orders, they will appear here for you to track.\r\n            </p>\r\n            <Link href=\"/products\">\r\n              <motion.button\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                className=\"px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-600 text-white font-medium rounded-full\"\r\n              >\r\n                Start Shopping\r\n              </motion.button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          // List of orders\r\n          <div className=\"grid gap-4\">\r\n            {orders.map((order) => (\r\n              <motion.div\r\n                key={order.id}\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.3 }}\r\n                className=\"bg-gray-800/50 border border-gray-700 hover:border-indigo-500/30 rounded-lg p-6 transition-all duration-300\"\r\n              >\r\n                <Link href={`/orders/${order.id}`}>\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div>\r\n                      <div className=\"flex items-center mb-2\">\r\n                        <span className=\"text-xl font-semibold text-white\">Order #{order.id.slice(-8)}</span>\r\n                        <span className={`ml-3 px-2 py-1 text-xs font-medium text-white rounded-full ${getStatusColor(order.status)}`}>\r\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-gray-400 text-sm mb-1\">\r\n                        Placed on {new Date(order.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}\r\n                      </p>\r\n                      <p className=\"text-indigo-300 font-medium\">${order.total.toFixed(2)} â€¢ {order.items} {order.items === 1 ? 'item' : 'items'}</p>\r\n                    </div>\r\n                    <div className=\"flex items-center text-gray-400 hover:text-indigo-400 transition-colors\">\r\n                      <BiPackage className=\"mr-1 h-5 w-5\" />\r\n                      <span className=\"mr-1\">Track Order</span>\r\n                      <FiChevronRight className=\"h-4 w-4\" />\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}